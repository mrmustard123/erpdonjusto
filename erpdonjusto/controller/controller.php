<?phperror_reporting(1);    /*echo 'Estoy en controller.php<br>';*/              require_once ('model/model.php');        /*echo 'controller: model cargado<br>';  */                require_once ('view/views.php');         /*echo 'controller: views cargado<br>';   */        require_once 'model/class.balance_checksum.php';            class controller{        private $views = null;        private $model = null;                //private $persistence;                        function __construct() {            /*constructor php 8*/            $this->views = new views();            /*echo 'Controller: views construido<br>';*/            $this->model = new model();            /*echo 'Controller: model construido<br>';*/                        //$this->persistence = new PersistenceErpLeo();        }        public function controller(){            /*constructor php 5*/            $this->views = new views();            /*echo 'Controller: views construido<br>';*/            $this->model = new model();            /*echo 'Controller: model construido<br>';*/                        //$this->persistence = new PersistenceErpLeo();        }        public function action_performed($params){            /*echo 'action:<br>';*/            /*echo 'params:'.$params['action']; */            switch ($params['action'])            {                case 'login':                    $this->process_view_login($params);                    break;                                case 'access':                    $this->process_access($params);                    break;                case 'home':                    $this->process_view_home($params);                    break;                case 'save_entry':                    $this->process_saveEntry($params);                    break;                  case 'gethint':                    $this->process_gethint($params);                                    break;                case 'formentry':                    $this->process_formentry($params);                    break;                case 'newaccount':                    $this->process_new_account($params);                    break;                case 'save_account':                    $this->process_saveAccount($params);                    break;                                case 'getresults':                    $this->process_get_results($params);                    break;                                                case 'entrydel':                    $this->process_entrydel($params);                    break;                                case 'ingredient':                    $this->process_ingredient($params);                    break;                                case 'save_ingredient':                    $this->process_saveIngredient($params);                    break;                                case 'ingredientdel':                    $this->process_ingredientDel($params);                    break;                                case 'gethintprod':                    $this->process_gethintprod($params);                    break;                                                case 'movement':                    $this->process_newMovement($params);                    break;                                case 'save_movement':                    $this->process_saveMovement($params);                    break;                                case 'stock':                    $this->process_view_stock($params);                    break;                                   case 'librodiario':                    $this->process_view_diary($params);                    break;                                 case 'save_mov_supply':                    $this->process_saveMovSupply($params);                    break;                                case 'mov_stock':                    $this->process_newMov_supply($params);                    break;                                case 'gethintsupply':                    $this->process_gethintsupply($params);                    break;                                case 'accountsplan':                    $this->process_accounts_plan($params);                    break;                                case 'movementslist':                    $this->process_movements_list($params);                    break;                case 'movsupplylist':                    $this->process_mov_supply_list($params);                    break;                                case 'ledger':                    $this->process_view_ledger($params);                    break;                                case 'client':                    $this->process_view_client($params);                    break;                case 'save_client':                    $this->process_saveClient($params);                    break;                                                case 'gethintclient':                    $this->process_gethintclient($params);                    break;                                case 'clientlist':                    $this->process_client_list($params);                    break;                                                                                                case 'consignaciones':                    $this->process_view_consignaciones($params);                    break;                                                                case 'gethintconsigprod':                    $this->process_gethitnconsigprod($params);                    break;                                case 'consigprodhistory':                    $this->process_consigprodhistory($params);                    break;                                     case 'bitacora':                    $this->process_view_bitacora($params);                    break;                                                               case 'savebitacora':                    $this->process_save_bitacora($params);                    break;                                                  case 'poshistory':                    $this->process_view_pos_history($params);                    break;                                   case 'saveposhistory':                    $this->process_save_pos_history($params);                    break;                   case 'poshistorylist':                    $this->process_view_pos_history_list($params);                                        break;                case 'poshisdescript':                    $this->process_view_hist_pos_descrip($params);                                        break;                case 'poshistsalud':                    $this->process_view_hist_pos_salud($params);                                        break;                                case 'pend_empresa':                    $this->process_view_pend_empresa($params);                                        break;                                  case 'nuevo_pend_empr':                    $this->process_save_pend_empresa($params);                                        break;                               case 'modif_pend_empr':                    $this->process_modif_pend_empresa($params);                                        break;                                  case 'pendientes':                    $this->process_view_pendiente($params);                                        break;                                  case 'nuevo_pendiente':                    $this->process_save_pendiente($params);                                        break;                               case 'modif_pendiente':                    $this->process_modif_pendiente($params);                                        break;                                    case 'report_pos_hist':                    $this->process_report_pos_hist($params);                                        break;                                 case 'report_pos_hist_alive':                    $this->process_report_pos_hist_alive($params);                                        break;                       case 'supply_price':                    $this->process_view_supply_price($params);                                        break;                                                                                                       }        }                        private function process_view_login($params){                        $this->views->display_view_login($params);                    }                private function process_access($params){                                    $access = $this->model->process_access($params);            if(!is_null($access)){                                $_SESSION['user_id'] = $access['user_id'];                $this->views->display_view_home($params);                            }else{                            $this->views->display_error_message($params);                                            }                            }        private function process_view_home($params){            $this->views->display_view_home($params);        }           private function process_saveEntry($params){            if($params['hf_id_account']!='0'){                $this->model->saveEntry($params);                $this->views->display_view_entry($params);                                    }else{                $this->views->display_view_error_account($params);            }        }        private function process_gethint($params){            $this->model->get_hint($params);        }        private function process_formentry($params){            $this->views->display_view_entry($params);        }        private function process_new_account($params){            $this->views->display_view_new_account($params);        }        private function process_saveAccount($params) {                $this->model->saveAccount($params);                $this->views->display_view_new_account($params);        }                 private function process_get_results($params){                        $this->views->display_view_results($params);                                }                                private function process_accounts_plan($params){                        $this->views->display_view_accounts_plan($params);                                }                                private function process_entrydel($params){                        $this->model->entryDelete($params['entryid']);            $this->views->display_view_entry($params);                    }                private function process_view_diary($params){                        $this->views->display_view_diary($params);                    }                        private function process_view_ledger($params){                        $this->views->display_view_ledger($params);                    }                private function process_view_client($params){            $this->views->display_view_client($params);        }                        private function process_saveClient($params){                        if(isset($params['client_id'])){                                $this->model->updateClient($params);                           }else{                $this->model->saveClient($params);            }                        $this->views->display_view_home($params);                    }                        private function  process_gethintclient($params){                        $this->model->get_hintclient($params);                    }                private function process_client_list($params){                        $this->views->display_view_client_list($params);                    }                                                private function process_view_consignaciones($params){                        $this->views->display_view_consig_prod($params);                    }                  private function process_view_bitacora($params){                        $this->views->display_view_bitacora($params);                    }                       private function process_save_bitacora($params){                        $this->model->saveBitacora($params);                        $this->views->display_view_bitacora($params);                    }                private function process_view_pos_history($params){            $this->views->display_view_position_list($params);        }                private  function process_view_pos_history_list($params){            $this->views->display_view_pos_history_list($params);        }                private  function process_view_hist_pos_descrip($params){            $this->views->display_view_hist_pos_descrip($params);        }                private  function process_view_hist_pos_salud($params){            $this->views->display_view_hist_pos_salud($params);        }                private function  process_gethitnconsigprod($params){                        $this->model->get_hintconsigprod($params);                    }                               private function process_consigprodhistory($params){                        $this->views->display_view_consig_prod_history($params);                                }                private  function process_save_pos_history($params){                                    $this->model->process_save_pos_history($params);            $this->views->display_view_position_list($params);                    }                private function process_view_pend_empresa($params){                        $this->views->display_view_pend_empresa($params);                    }                        private  function process_save_pend_empresa($params){            $this->model->process_save_pend_empresa($params);            $this->views->display_view_pend_empresa($params);                                }                private function process_modif_pend_empresa($params){            $this->model->process_modif_pend_empresa($params);            $this->views->display_view_pend_empresa($params);                                         }                        private function process_view_pendiente($params){                        $this->views->display_view_pendiente($params);                    }                        private  function process_save_pendiente($params){            $this->model->process_save_pendiente($params);            $this->views->display_view_pendiente($params);                                }                private function process_modif_pendiente($params){            $this->model->process_modif_pendiente($params);            $this->views->display_view_pendiente($params);                                         }                /***************************FUNCIONES DE INVENTÁRIO*************************/                 private function process_ingredient($params){            $this->views->display_view_ingredients($params);        }                                private function process_saveIngredient($params){                           $this->model->saveIngredient($params);                $this->views->display_view_ingredients($params);                                                                      }                private  function process_ingredientDel($ingredient_id){            $this->ingredientDel($ingredient_id);        }                        private function process_newMovement($params){            $this->views->display_view_movement($params);        }                private function process_saveMovement($params){            $this->model->saveMovement($params);                                    $this->views->display_view_movement($params);                    }                        private function process_gethintprod($params){                         $this->model->get_hintprod($params);        }                        private function process_view_stock($params){                         $this->views->display_view_stock($params);        }                                               private  function process_saveMovSupply($params){            $this->model->saveMovSupply($params);            $this->views->display_view_mov_supply($params);                                            }                private function process_newMov_supply($params){                        $this->views->display_view_mov_supply($params);                                }                        private function process_gethintsupply($params){                        $this->model->get_hint_supplies($params);                    }                                       private function process_movements_list($params){                        $this->views->display_view_movement_list($params);        }        private function process_mov_supply_list($params){                        $this->views->display_view_mov_supply_list($params);        }        /*        private function get_list_pos_hist(){            $v_pos_histories = $this->persistence->getListPosHistory();            return $v_pos_histories;        }         */               private function process_report_pos_hist($params){                        $this->views->display_view_report_pos_hist($params);                                           }                private function process_report_pos_hist_alive($params){                        $this->views->display_view_report_pos_hist_alive($params);                                           }                    private function process_view_supply_price($params){                        $this->views->display_view_supply_price($params);                                           }                                          /************FIN FUNCIONES DE INVENTÁRIO***************************************/        /*/for testing purposes        public function proccess_test(){            echo 'Soy Controller<br>';        }//*/                        public function calculate_checksum_budget(){                        $balance_checksum = new model\balance_checksum();                        $budget = $balance_checksum->calculate_budget();                        return $budget;                                           }                    }            ?>